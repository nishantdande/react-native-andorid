__d(function (global, require, module, exports, _dependencyMap) {
   Object.defineProperty(exports, "__esModule", {
      value: true
   });

   var _react2 = require(_dependencyMap[0], "react");

   var _react3 = _interopRequireDefault(_react2);

   var _index = require(_dependencyMap[1], "./../../../node_modules/react-transform-hmr/lib/index.js");

   var _index2 = _interopRequireDefault(_index);

   var _jsxFileName = "/Users/nishantdande/Desktop/react-native-redux/app/components/list/list.js";

   var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

   var _reactNative = require(_dependencyMap[2], "react-native");

   function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

   function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

   function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

   function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

   var _components = {
      List: {
         displayName: "List"
      }
   };

   var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
      filename: "/Users/nishantdande/Desktop/react-native-redux/app/components/list/list.js",
      components: _components,
      locals: [module],
      imports: [_react3.default]
   });

   function _wrapComponent(id) {
      return function (Component) {
         return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
      };
   }

   var List = _wrapComponent("List")(function (_Component) {
      _inherits(List, _Component);

      function List() {
         var _ref;

         var _temp, _this, _ret;

         _classCallCheck(this, List);

         for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
         }

         return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = List.__proto__ || Object.getPrototypeOf(List)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
            names: [{
               id: 0,
               name: 'Ben'
            }, {
               id: 1,
               name: 'Susan'
            }, {
               id: 2,
               name: 'Robert'
            }, {
               id: 3,
               name: 'Mary'
            }]
         }, _this.alertItemName = function (item) {
            alert(item.name);
         }, _temp), _possibleConstructorReturn(_this, _ret);
      }

      _createClass(List, [{
         key: "render",
         value: function render() {
            var _this2 = this;

            return _react3.default.createElement(
               _reactNative.View,
               {
                  __source: {
                     fileName: _jsxFileName,
                     lineNumber: 30
                  }
               },
               this.state.names.map(function (item, index) {
                  return _react3.default.createElement(
                     _reactNative.TouchableOpacity,
                     {
                        key: item.id,
                        style: styles.container,
                        onPress: function onPress() {
                           return _this2.alertItemName(item);
                        },
                        __source: {
                           fileName: _jsxFileName,
                           lineNumber: 33
                        }
                     },
                     _react3.default.createElement(
                        _reactNative.Text,
                        {
                           style: styles.text,
                           __source: {
                              fileName: _jsxFileName,
                              lineNumber: 38
                           }
                        },
                        item.name
                     )
                  );
               })
            );
         }
      }]);

      return List;
   }(_react2.Component));

   exports.default = List;

   var styles = _reactNative.StyleSheet.create({
      container: {
         padding: 10,
         marginTop: 3,
         backgroundColor: '#d9f9b1',
         alignItems: 'center'
      },
      text: {
         color: '#4f603c'
      }
   });
});