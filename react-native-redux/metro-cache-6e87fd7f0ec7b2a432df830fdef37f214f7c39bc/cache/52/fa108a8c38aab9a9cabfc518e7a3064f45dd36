__d(function (global, require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _jsxFileName = "/Users/nishantdande/Desktop/react-native-redux/app/screens/screen.js";

  var _react = require(_dependencyMap[0], "react");

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = require(_dependencyMap[1], "react-native");

  var _reactRedux = require(_dependencyMap[2], "react-redux");

  var _actions = require(_dependencyMap[3], "../actions/actions");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  var styles = void 0;

  var App = function App(props) {
    var _styles = styles,
        container = _styles.container,
        text = _styles.text,
        button = _styles.button,
        buttonText = _styles.buttonText;
    var _props$people = props.people,
        people = _props$people.people,
        isFetching = _props$people.isFetching;
    return _react2.default.createElement(
      _reactNative.View,
      {
        style: container,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 18
        }
      },
      _react2.default.createElement(
        _reactNative.Text,
        {
          style: text,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 19
          }
        },
        "Redux Example"
      ),
      _react2.default.createElement(
        _reactNative.TouchableHighlight,
        {
          style: button,
          onPress: function onPress() {
            return props.getPeople();
          },
          __source: {
            fileName: _jsxFileName,
            lineNumber: 20
          }
        },
        _react2.default.createElement(
          _reactNative.Text,
          {
            style: buttonText,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 21
            }
          },
          "Load People"
        )
      ),
      isFetching && _react2.default.createElement(
        _reactNative.Text,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 24
          }
        },
        "Loading"
      ),
      people.length ? people.map(function (person, i) {
        return _react2.default.createElement(
          _reactNative.View,
          {
            key: i,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 29
            }
          },
          _react2.default.createElement(
            _reactNative.Text,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 30
              }
            },
            "Name: ",
            person.name
          ),
          _react2.default.createElement(
            _reactNative.Text,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 31
              }
            },
            "Birth Year: ",
            person.birth_year
          )
        );
      }) : null
    );
  };

  styles = _reactNative.StyleSheet.create({
    container: {
      marginTop: 100,
      paddingLeft: 20,
      paddingRight: 20
    },
    text: {
      textAlign: 'center'
    },
    button: {
      height: 60,
      justifyContent: 'center',
      alignItems: 'center',
      backgroundColor: '#0b7eff'
    },
    buttonText: {
      color: 'white'
    }
  });

  function mapStateToProps(state) {
    return {
      people: state.people
    };
  }

  function mapDispatchToProps(dispatch) {
    return {
      getPeople: function getPeople() {
        return dispatch((0, _actions.fetchPeopleFromAPI)());
      }
    };
  }

  exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(App);
});